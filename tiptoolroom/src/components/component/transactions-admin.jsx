/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/mTaYb5MNn1x
 */
'use client';
import { Button } from '@/components/ui/button';
import { DropdownMenuTrigger, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuItem, DropdownMenuContent, DropdownMenu } from '@/components/ui/dropdown-menu';
import { TableHead, TableRow, TableHeader, TableCell, TableBody, Table } from '@/components/ui/table';
import { useEffect, useState } from 'react';

export function TransactionsAdmin() {
 const [itemData, setItemData] = useState([]); // Initialize with an empty array

 useEffect(() => {
    fetch('http://localhost:6969/transact')
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        setItemData(data); // Corrected typo here
        console.log(data);
      })
      .catch(error => {
        console.error('Error fetching items data: ', error);
      });
 }, []);

 // Function to render the table rows dynamically
 const renderRows = () => {
    return itemData?.map((transaction, index) => (
      <TableRow key={index}>
        <TableCell>{transaction.sdate}</TableCell>
        <TableCell>{transaction.stime}</TableCell>
        <TableCell>{transaction.studentname}</TableCell>
        <TableCell>{transaction.studentId}</TableCell>
        <TableCell>{transaction.course}</TableCell>
        <TableCell>{transaction.confirmedBy}</TableCell>
        <TableCell>
          <ul>
            {transaction.itemsList?.map((item, i) => (
              <li key={i}>{item}</li>
            ))}
          </ul>
        </TableCell>
        <TableCell>
          <Button className="mr-2" variant="outline">Prepare</Button>
          <Button className="mr-2" variant="outline">Returned</Button>
          <Button className="mr-2" variant="outline">Confirm</Button>
          <Button variant="outline">Reject</Button>
        </TableCell>
      </TableRow>
    ));
 };

 return (
    <div className="w-full min-h-screen bg-gray-100 dark:bg-gray-900">
      <header className="flex items-center justify-between px-6 py-4 bg-white dark:bg-gray-800 shadow-md">
        <h1 className="text-xl font-bold text-gray-800 dark:text-gray-200">Transaction Management</h1>
        <div className="flex items-center space-x-2">
          <Button size="icon" variant="outline">
            <BellIcon className="h-4 w-4" />
            <span className="sr-only">Notifications</span>
          </Button>
          <DropdownMenu>
            <DropdownMenuTrigger asChild>
              <Button className="rounded-full border border-gray-200 w-8 h-8 dark:border-gray-800" size="icon" variant="ghost">
                <img alt="Avatar" className="rounded-full" height="32" src="/placeholder.svg" style={{ aspectRatio: '32/32', objectFit: 'cover' }} width="32" />
                <span className="sr-only">Toggle user menu</span>
              </Button>
            </DropdownMenuTrigger>
            <DropdownMenuContent align="end">
              <DropdownMenuLabel>My Account</DropdownMenuLabel>
              <DropdownMenuSeparator />
              <DropdownMenuItem>Settings</DropdownMenuItem>
              <DropdownMenuItem>Support</DropdownMenuItem>
              <DropdownMenuSeparator />
              <DropdownMenuItem>Logout</DropdownMenuItem>
            </DropdownMenuContent>
          </DropdownMenu>
        </div>
      </header>
      <main className="p-6">
        <div className="overflow-x-auto">
          <Table>
            <TableHeader>
              <TableRow>
                <TableHead>Date</TableHead>
                <TableHead>Time</TableHead>
                <TableHead>Name</TableHead>
                <TableHead>Student ID</TableHead>
                <TableHead>Course</TableHead>
                <TableHead>Confirmed By</TableHead>
                <TableHead>Item List</TableHead>
                <TableHead>Actions</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {renderRows()}
            </TableBody>
          </Table>
        </div>
      </main>
    </div>
 );
}

function BellIcon(props) {
 return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9" />
      <path d="M10.3 21a1.94 1.94 0 0 0 3.4 0" />
    </svg>
 );
}
